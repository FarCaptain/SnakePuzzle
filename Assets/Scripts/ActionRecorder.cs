using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ActionRecorder : MonoBehaviour
{
    private readonly Stack<ActionBase> _actions = new Stack<ActionBase>();
    private readonly Stack<ActionBase> _undones = new Stack<ActionBase>();
    public void Record(ActionBase action)
    {
        _actions.Push(action);
        action.Execute();
    }

    public void clearUndone()
    {
        if (_undones.Count != 0)
        {
            _undones.Clear();
        }
    }

    public void Rewind()
    {
        if (_actions.Count == 0)
            return;

        var action = _actions.Pop();
        action.Undo();

        // there can't be two continous shrink/expand actions
        if (Utils.TryConvertVal<ActionBase, ShrinkAction>(action, out ShrinkAction shrinkInfo)
            || Utils.TryConvertVal<ActionBase, ExpandAction>(action, out ExpandAction expandInfo))
        {
            action = _actions.Pop();
            action.Undo();
            _undones.Push(action);
        }
        else
        {
            // only puts in movement actions cause others get generated by the movement
            _undones.Push(action);
        }

        AudioManager.instance.Play("Undo");
    }

    public void Redo()
    {
        if (_undones.Count == 0)
            return;

        var action = _undones.Pop();
        _actions.Push(action);
        action.Execute();

        AudioManager.instance.Play("Redo");
    }

}
